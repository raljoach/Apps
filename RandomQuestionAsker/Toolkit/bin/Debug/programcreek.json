{"Questions":[{"Company":null,"Tags":["String/Array"],"Text":"Problem","Url":"http://www.programcreek.com/2015/03/rotate-array-in-java/","Keywords":null,"Topic":null,"Name":"Rotate Array"},{"Company":null,"Tags":["String/Array"],"Text":"Given an input string, reverse the string word by word. A word is defined as a sequence of non-space characters.","Url":"http://www.programcreek.com/2014/05/leetcode-reverse-words-in-a-string-ii-java/","Keywords":null,"Topic":null,"Name":"Reverse Words in a String"},{"Company":null,"Tags":["String/Array"],"Text":"Evaluate the value of an arithmetic expression in Reverse Polish Notation. Valid operators are +, -, *, /. Each operand may be an integer or another expression. For example:","Url":"http://www.programcreek.com/2012/12/leetcode-evaluate-reverse-polish-notation/","Keywords":null,"Topic":null,"Name":"Evaluate Reverse Polish Notation (Stack)"},{"Company":null,"Tags":["String/Array"],"Text":"Given two strings s and t, determine if they are isomorphic. Two strings are isomorphic if the characters in s can be replaced to get t.","Url":"http://www.programcreek.com/2014/05/leetcode-isomorphic-strings-java/","Keywords":null,"Topic":null,"Name":"Isomorphic Strings"},{"Company":null,"Tags":["String/Array"],"Text":"Given two words (start and end), and a dictionary, find the length of shortest transformation sequence from start to end, such that only one letter can be changed at a time and each intermediate word must exist in the dictionary. For example, given:","Url":"http://www.programcreek.com/2012/12/leetcode-word-ladder/","Keywords":null,"Topic":null,"Name":"Word Ladder (BFS)"},{"Company":null,"Tags":["String/Array"],"Text":"Given two words (start and end), and a dictionary, find all shortest transformation sequence(s) from start to end, such that: 1) Only one letter can be changed at a time, 2) Each intermediate word must exist in the dictionary.","Url":"http://www.programcreek.com/2014/06/leetcode-word-ladder-ii-java/","Keywords":null,"Topic":null,"Name":"Word Ladder II (BFS)"},{"Company":null,"Tags":["String/Array"],"Text":"Java Solution 1","Url":"http://www.programcreek.com/2012/12/leetcode-median-of-two-sorted-arrays-java/","Keywords":null,"Topic":null,"Name":"Median of Two Sorted Arrays"},{"Company":null,"Tags":["String/Array"],"Text":"Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.","Url":"http://www.programcreek.com/2014/05/leetcode-kth-largest-element-in-an-array-java/","Keywords":null,"Topic":null,"Name":"Kth Largest Element in an Array"},{"Company":null,"Tags":["String/Array"],"Text":"Implement wildcard pattern matching with support for '?' and '*'.","Url":"http://www.programcreek.com/2014/06/leetcode-wildcard-matching-java/","Keywords":null,"Topic":null,"Name":"Wildcard Matching"},{"Company":null,"Tags":["String/Array"],"Text":"Implement regular expression matching with support for '.' and '*'.","Url":"http://www.programcreek.com/2012/12/leetcode-regular-expression-matching-in-java/","Keywords":null,"Topic":null,"Name":"Regular Expression Matching"},{"Company":null,"Tags":["String/Array"],"Text":"Problem:","Url":"http://www.programcreek.com/2012/12/leetcode-merge-intervals/","Keywords":null,"Topic":null,"Name":"Merge Intervals"},{"Company":null,"Tags":["String/Array"],"Text":"Problem:","Url":"http://www.programcreek.com/2012/12/leetcode-insert-interval/","Keywords":null,"Topic":null,"Name":"Insert Interval"},{"Company":null,"Tags":["String/Array"],"Text":"Given an array of integers, find two numbers such that they add up to a specific target number.","Url":"http://www.programcreek.com/2012/12/leetcode-solution-of-two-sum-in-java/","Keywords":null,"Topic":null,"Name":"Two Sum"},{"Company":null,"Tags":["String/Array"],"Text":"This problem is similar to Two Sum.","Url":"http://www.programcreek.com/2014/03/two-sum-ii-input-array-is-sorted-java/","Keywords":null,"Topic":null,"Name":"Two Sum II"},{"Company":null,"Tags":["String/Array"],"Text":"Design and implement a TwoSum class. It should support the following operations: add and find.","Url":"http://www.programcreek.com/2014/03/two-sum-iii-data-structure-design-java/","Keywords":null,"Topic":null,"Name":"Two Sum III"},{"Company":null,"Tags":["String/Array"],"Text":"Problem:","Url":"http://www.programcreek.com/2012/12/leetcode-3sum/","Keywords":null,"Topic":null,"Name":"um"},{"Company":null,"Tags":["String/Array"],"Text":"Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.","Url":"http://www.programcreek.com/2013/02/leetcode-4sum-java/","Keywords":null,"Topic":null,"Name":"um"},{"Company":null,"Tags":["String/Array"],"Text":"Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.","Url":"http://www.programcreek.com/2013/02/leetcode-3sum-closest-java/","Keywords":null,"Topic":null,"Name":"3Sum Closest"},{"Company":null,"Tags":["String/Array"],"Text":"Implement atoi to convert a string to an integer.","Url":"http://www.programcreek.com/2012/12/leetcode-string-to-integer-atoi/","Keywords":null,"Topic":null,"Name":"String to Integer"},{"Company":null,"Tags":["String/Array"],"Text":"Note:\r\nYou may assume that A has enough space to hold additional elements from B. The number of elements initialized in A and B are m and n respectively.","Url":"http://www.programcreek.com/2012/12/leetcode-merge-sorted-array-java/","Keywords":null,"Topic":null,"Name":"Merge Sorted Array"},{"Company":null,"Tags":["String/Array"],"Text":"Analysis","Url":"http://www.programcreek.com/2012/12/leetcode-valid-parentheses-java/","Keywords":null,"Topic":null,"Name":"Valid Parentheses"},{"Company":null,"Tags":["String/Array"],"Text":"Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.","Url":"http://www.programcreek.com/2014/06/leetcode-longest-valid-parentheses-java/","Keywords":null,"Topic":null,"Name":"Longest Valid Parentheses"},{"Company":null,"Tags":["String/Array"],"Text":"Problem:","Url":"http://www.programcreek.com/2012/12/leetcode-implement-strstr-java/","Keywords":null,"Topic":null,"Name":"Implement strStr()"},{"Company":null,"Tags":["String/Array"],"Text":"Given an array of n positive integers and a positive integer s, find the minimal length of a subarray of which the sum â‰¥ s. If there isn't one, return 0 instead.","Url":"http://www.programcreek.com/2014/05/leetcode-minimum-size-subarray-sum-java/","Keywords":null,"Topic":null,"Name":"Minimum Size Subarray Sum"},{"Company":null,"Tags":["String/Array"],"Text":"Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. You may assume no duplicates in the array.","Url":"http://www.programcreek.com/2013/01/leetcode-search-insert-position/","Keywords":null,"Topic":null,"Name":"Search Insert Position"},{"Company":null,"Tags":["String/Array"],"Text":"Given an unsorted array of integers, find the length of the longest consecutive elements sequence.","Url":"http://www.programcreek.com/2013/01/leetcode-longest-consecutive-sequence-java/","Keywords":null,"Topic":null,"Name":"Longest Consecutive Sequence"},{"Company":null,"Tags":["String/Array"],"Text":"Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.","Url":"http://www.programcreek.com/2013/01/leetcode-valid-palindrome-java/","Keywords":null,"Topic":null,"Name":"Valid Palindrome"},{"Company":null,"Tags":["String/Array"],"Text":"The string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)","Url":"http://www.programcreek.com/2014/05/leetcode-zigzag-conversion-java/","Keywords":null,"Topic":null,"Name":"ZigZag Conversion"},{"Company":null,"Tags":["String/Array"],"Text":"Given two binary strings, return their sum (also a binary string).","Url":"http://www.programcreek.com/2014/05/leetcode-add-binary-java/","Keywords":null,"Topic":null,"Name":"Add Binary"},{"Company":null,"Tags":["String/Array"],"Text":"Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word in the string. If the last word does not exist, return 0.","Url":"http://www.programcreek.com/2014/05/leetcode-length-of-last-word-java/","Keywords":null,"Topic":null,"Name":"Length of Last Word"},{"Company":null,"Tags":["String/Array"],"Text":"Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.","Url":"http://www.programcreek.com/2013/01/leetcode-triangle-java/","Keywords":null,"Topic":null,"Name":"Triangle"},{"Company":null,"Tags":["String/Array"],"Text":"Given an array of integers, find if the array contains any duplicates. Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.","Url":"http://www.programcreek.com/2014/05/leetcode-contains-duplicate-java/","Keywords":null,"Topic":null,"Name":"I"},{"Company":null,"Tags":["String/Array"],"Text":"Given an array of integers and an integer k, return true if and only if there are two distinct indices i and j in the array such that nums[i] = nums[j] and the difference between i and j is at most k.","Url":"http://www.programcreek.com/2014/05/leetcode-contains-duplicate-ii-java/","Keywords":null,"Topic":null,"Name":"II"},{"Company":null,"Tags":["String/Array"],"Text":"Given an array of integers, find out whether there are two distinct indices i and j in the array such that the difference between nums[i] and nums[j] is at most t and the difference between i and j is at most k.","Url":"http://www.programcreek.com/2014/06/leetcode-contains-duplicate-iii-java/","Keywords":null,"Topic":null,"Name":"III"},{"Company":null,"Tags":["String/Array"],"Text":"Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length. Do not allocate extra space for another array, you must do this in place with constant memory.","Url":"http://www.programcreek.com/2013/01/leetcode-remove-duplicates-from-sorted-array-java/","Keywords":null,"Topic":null,"Name":"I"},{"Company":null,"Tags":["String/Array"],"Text":"Follow up for \"Remove Duplicates\": What if duplicates are allowed at most twice?","Url":"http://www.programcreek.com/2013/01/leetcode-remove-duplicates-from-sorted-array-ii-java/","Keywords":null,"Topic":null,"Name":"II"},{"Company":null,"Tags":["String/Array"],"Text":"Given an array and a value, remove all instances of that value in place and return the new length. (Note: The order of elements can be changed. It doesn't matter what you leave beyond the new length.)","Url":"http://www.programcreek.com/2014/04/leetcode-remove-element-java/","Keywords":null,"Topic":null,"Name":"Remove Element"},{"Company":null,"Tags":["String/Array"],"Text":"Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.","Url":"http://www.programcreek.com/2014/05/leetcode-move-zeroes-java/","Keywords":null,"Topic":null,"Name":"Move Zeroes"},{"Company":null,"Tags":["String/Array"],"Text":"Given a string, find the length of the longest substring without repeating characters. For example, the longest substring without repeating letters for \"abcabcbb\" is \"abc\", which the length is 3. For \"bbbbb\" the longest substring is \"b\", with the length of 1.","Url":"http://www.programcreek.com/2013/02/leetcode-longest-substring-without-repeating-characters-java/","Keywords":null,"Topic":null,"Name":"Longest Substring Without Repeating Characters"},{"Company":null,"Tags":["String/Array"],"Text":"This is a problem asked by Google.","Url":"http://www.programcreek.com/2013/02/longest-substring-which-contains-2-unique-characters/","Keywords":null,"Topic":null,"Name":"Longest Substring that contains 2 unique characters"},{"Company":null,"Tags":["String/Array"],"Text":"You are given a string, s, and a list of words, words, that are all of the same length. Find all starting indices of substring(s) in s that is a concatenation of each word in words exactly once and without any intervening characters.","Url":"http://www.programcreek.com/2014/06/leetcode-substring-with-concatenation-of-all-words-java/","Keywords":null,"Topic":null,"Name":"Substring with Concatenation of All Words"},{"Company":null,"Tags":["String/Array"],"Text":"Given a string S and a string T, find the minimum window in S which will contain all the characters in T in complexity O(n).","Url":"http://www.programcreek.com/2014/05/leetcode-minimum-window-substring-java/","Keywords":null,"Topic":null,"Name":"Minimum Window Substring"},{"Company":null,"Tags":["String/Array"],"Text":"Given an input string, reverse the string word by word.","Url":"http://www.programcreek.com/2014/02/leetcode-reverse-words-in-a-string-java/","Keywords":null,"Topic":null,"Name":"Reverse Words in a String"},{"Company":null,"Tags":["String/Array"],"Text":"Suppose a sorted array is rotated at some pivot unknown to you beforehand. (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).","Url":"http://www.programcreek.com/2014/02/leetcode-find-minimum-in-rotated-sorted-array/","Keywords":null,"Topic":null,"Name":"I"},{"Company":null,"Tags":["String/Array"],"Text":"Problem","Url":"http://www.programcreek.com/2014/03/leetcode-find-minimum-in-rotated-sorted-array-ii-java/","Keywords":null,"Topic":null,"Name":"II"},{"Company":null,"Tags":["String/Array"],"Text":"Suppose a sorted array is rotated at some pivot unknown to you beforehand. (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).","Url":"http://www.programcreek.com/2014/06/leetcode-search-in-rotated-sorted-array-java/","Keywords":null,"Topic":null,"Name":"I"},{"Company":null,"Tags":["String/Array"],"Text":"Follow up for \"Search in Rotated Sorted Array\": what if duplicates are allowed? Write a function to determine if a given target is in the array.","Url":"http://www.programcreek.com/2014/06/leetcode-search-in-rotated-sorted-array-ii-java/","Keywords":null,"Topic":null,"Name":"II"},{"Company":null,"Tags":["String/Array"],"Text":"Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.","Url":"http://www.programcreek.com/2014/02/leetcode-min-stack-java/","Keywords":null,"Topic":null,"Name":"Min Stack"},{"Company":null,"Tags":["String/Array"],"Text":"Given an array of size n, find the majority element. The majority element is the element that appears more than âŒŠ n/2 âŒ‹ times. (assume that the array is non-empty and the majority element always exist in the array.)","Url":"http://www.programcreek.com/2014/02/leetcode-majority-element-java/","Keywords":null,"Topic":null,"Name":"I"},{"Company":null,"Tags":["String/Array"],"Text":"Given an integer array of size n, find all elements that appear more than âŒŠ n/3 âŒ‹ times. The algorithm should run in linear time and in O(1) space.","Url":"http://www.programcreek.com/2014/07/leetcode-majority-element-ii-java/","Keywords":null,"Topic":null,"Name":"II"},{"Company":null,"Tags":["String/Array"],"Text":"You are playing the following Bulls and Cows game with your friend: You write down a number and ask your friend to guess what the number is. Each time your friend makes a guess, you provide a hint that indicates how many digits in said guess match your secret number exactly in both digit and position (called \"bulls\") and how many digits match the secret number but locate in the wrong position (called \"cows\"). Your friend will use successive guesses and hints to eventually derive the secret number.","Url":"http://www.programcreek.com/2014/05/leetcode-bulls-and-cows-java/","Keywords":null,"Topic":null,"Name":"Bulls and Cows"},{"Company":null,"Tags":["String/Array"],"Text":"Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.","Url":"http://www.programcreek.com/2014/05/leetcode-largest-rectangle-in-histogram-java/","Keywords":null,"Topic":null,"Name":"Largest Rectangle in Histogram"},{"Company":null,"Tags":["String/Array"],"Text":"Problem","Url":"http://www.programcreek.com/2014/02/leetcode-longest-common-prefix-java/","Keywords":null,"Topic":null,"Name":"Longest Common Prefix"},{"Company":null,"Tags":["String/Array"],"Text":"Given a list of non negative integers, arrange them such that they form the largest number.","Url":"http://www.programcreek.com/2014/02/leetcode-largest-number-java/","Keywords":null,"Topic":null,"Name":"Largest Number"},{"Company":null,"Tags":["String/Array"],"Text":"Given an absolute path for a file (Unix-style), simplify it.","Url":"http://www.programcreek.com/2014/04/leetcode-simplify-path-java/","Keywords":null,"Topic":null,"Name":"Simplify Path"},{"Company":null,"Tags":["String/Array"],"Text":"Problem","Url":"http://www.programcreek.com/2014/03/leetcode-compare-version-numbers-java/","Keywords":null,"Topic":null,"Name":"Compare Version Numbers"},{"Company":null,"Tags":["String/Array"],"Text":"There are N gas stations along a circular route, where the amount of gas at station i is gas[i].","Url":"http://www.programcreek.com/2014/03/leetcode-gas-station-java/","Keywords":null,"Topic":null,"Name":"Gas Station"},{"Company":null,"Tags":["String/Array"],"Text":"Given numRows, generate the first numRows of Pascal's triangle. For example, given numRows = 5, the result should be:","Url":"http://www.programcreek.com/2014/03/leetcode-pascals-triangle-java/","Keywords":null,"Topic":null,"Name":"I"},{"Company":null,"Tags":["String/Array"],"Text":"Given an index k, return the kth row of the Pascal's triangle. For example, when k = 3, the row is [1,3,3,1].","Url":"http://www.programcreek.com/2014/04/leetcode-pascals-triangle-ii-java/","Keywords":null,"Topic":null,"Name":"II"},{"Company":null,"Tags":["String/Array"],"Text":"Problem","Url":"http://www.programcreek.com/2014/03/leetcode-container-with-most-water-java/","Keywords":null,"Topic":null,"Name":"Container With Most Water"},{"Company":null,"Tags":["String/Array"],"Text":"There are N children standing in a line. Each child is assigned a rating value. You are giving candies to these children subjected to the following requirements:","Url":"http://www.programcreek.com/2014/03/leetcode-candy-java/","Keywords":null,"Topic":null,"Name":"Candy"},{"Company":null,"Tags":["String/Array"],"Text":"Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.","Url":"http://www.programcreek.com/2014/06/leetcode-trapping-rain-water-java/","Keywords":null,"Topic":null,"Name":"Trapping Rain Water"},{"Company":null,"Tags":["String/Array"],"Text":"Problem","Url":"http://www.programcreek.com/2014/03/leetcode-count-and-say-java/","Keywords":null,"Topic":null,"Name":"Count and Say"},{"Company":null,"Tags":["String/Array"],"Text":"Given a sorted array of integers, find the starting and ending position of a given target value. Your algorithm's runtime complexity must be in the order of O(log n). If the target is not found in the array, return [-1, -1]. For example, given [5, 7, 7, 8, 8, 10] and target value 8, return [3, 4].","Url":"http://www.programcreek.com/2014/04/leetcode-search-for-a-range-java/","Keywords":null,"Topic":null,"Name":"Search for a Range"},{"Company":null,"Tags":["String/Array"],"Text":"Implement a basic calculator to evaluate a simple expression string.","Url":"http://www.programcreek.com/2014/06/leetcode-basic-calculator-java/","Keywords":null,"Topic":null,"Name":"Basic Calculator"},{"Company":null,"Tags":["String/Array"],"Text":"Given an array of strings, return all groups of strings that are anagrams.","Url":"http://www.programcreek.com/2014/04/leetcode-anagrams-java/","Keywords":null,"Topic":null,"Name":"Group Anagrams"},{"Company":null,"Tags":["String/Array"],"Text":"Given a string S, you are allowed to convert it to a palindrome by adding characters in front of it. Find and return the shortest palindrome you can find by performing this transformation.","Url":"http://www.programcreek.com/2014/06/leetcode-shortest-palindrome-java/","Keywords":null,"Topic":null,"Name":"Shortest Palindrome"},{"Company":null,"Tags":["String/Array"],"Text":"Find the total area covered by two rectilinear rectangles in a 2D plane. Each rectangle is defined by its bottom left corner and top right corner coordinates.","Url":"http://www.programcreek.com/2014/06/leetcode-rectangle-area-java/","Keywords":null,"Topic":null,"Name":"Rectangle Area"},{"Company":null,"Tags":["String/Array"],"Text":"Given a sorted integer array without duplicates, return the summary of its ranges for consecutive numbers.","Url":"http://www.programcreek.com/2014/07/leetcode-summary-ranges-java/","Keywords":null,"Topic":null,"Name":"Summary Ranges"},{"Company":null,"Tags":["String/Array"],"Text":"Given an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.","Url":"http://www.programcreek.com/2015/02/leetcode-increasing-triplet-subsequence-java/","Keywords":null,"Topic":null,"Name":"Increasing Triplet Subsequence"},{"Company":null,"Tags":["String/Array"],"Text":"Given a list of numbers and a target number, write a program to determine whether the target number can be calculated by applying \"+-*/\" operations to the number list? You can assume () is automatically added when necessary.","Url":"http://www.programcreek.com/2016/04/get-target-using-number-list-and-arithmetic-operations-google/","Keywords":null,"Topic":null,"Name":"Get Target Using Number List And Arithmetic Operations"},{"Company":null,"Tags":["String/Array"],"Text":"Write a function that takes a string as input and reverse only the vowels of a string.","Url":"http://www.programcreek.com/2015/04/leetcode-reverse-vowels-of-a-string-java/","Keywords":null,"Topic":null,"Name":"Reverse Vowels of a String"},{"Company":null,"Tags":["String/Array"],"Text":"You are playing the following Flip Game with your friend: Given a string that contains only these two characters: + and -, you and your friend take turns to flip two consecutive \"++\" into \"--\". The game ends when a person can no longer make a move and therefore the other person will be the winner.","Url":"http://www.programcreek.com/2014/04/leetcode-flip-game-java/","Keywords":null,"Topic":null,"Name":"Flip Game"},{"Company":null,"Tags":["String/Array"],"Text":"You are playing the following Flip Game with your friend: Given a string that contains only these two characters: + and -, you and your friend take turns to flip two consecutive \"++\" into \"--\". The game ends when a person can no longer make a move and therefore the other person will be the winner.","Url":"http://www.programcreek.com/2014/05/leetcode-flip-game-ii-java/","Keywords":null,"Topic":null,"Name":"Flip Game II"},{"Company":null,"Tags":["String/Array"],"Text":"Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing from the array. For example, given nums = [0, 1, 3] return 2.","Url":"http://www.programcreek.com/2014/05/leetcode-missing-number-java/","Keywords":null,"Topic":null,"Name":"Missing Number"},{"Company":null,"Tags":["String/Array"],"Text":"Given two strings s and t, write a function to determine if t is an anagram of s.","Url":"http://www.programcreek.com/2014/05/leetcode-valid-anagram-java/","Keywords":null,"Topic":null,"Name":"Valid Anagram"},{"Company":null,"Tags":["String/Array"],"Text":"Given a string, we can \"shift\" each of its letter to its successive letter, for example: \"abc\" -> \"bcd\". We can keep \"shifting\" which forms the sequence: \"abc\" -> \"bcd\" -> ... -> \"xyz\".","Url":"http://www.programcreek.com/2014/05/leetcode-group-shifted-strings-java/","Keywords":null,"Topic":null,"Name":"Group Shifted Strings"},{"Company":null,"Tags":["String/Array"],"Text":"Given a non-empty array of integers, return the k most frequent elements.","Url":"http://www.programcreek.com/2014/05/leetcode-top-k-frequent-elements-java/","Keywords":null,"Topic":null,"Name":"Top K Frequent Elements"},{"Company":null,"Tags":["String/Array"],"Text":"A peak element is an element that is greater than its neighbors. Given an input array where num[i] â‰  num[i+1], find a peak element and return its index. The array may contain multiple peaks, in that case return the index to any one of the peaks is fine.","Url":"http://www.programcreek.com/2014/02/leetcode-find-peak-element/","Keywords":null,"Topic":null,"Name":"Find Peak Element"},{"Company":null,"Tags":["String/Array"],"Text":"Given a pattern and a string str, find if str follows the same pattern. Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.","Url":"http://www.programcreek.com/2014/05/leetcode-word-pattern-java/","Keywords":null,"Topic":null,"Name":"Word Pattern"},{"Company":null,"Tags":["String/Array"],"Text":"Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index. A scientist has index h if h of his/her N papers have at least h citations each, and the other N âˆ’ h papers have no more than h citations each.","Url":"http://www.programcreek.com/2014/05/leetcode-h-index-java/","Keywords":null,"Topic":null,"Name":"H-Index"},{"Company":null,"Tags":["String/Array"],"Text":"Given a list of unique words. Find all pairs of distinct indices (i, j) in the given list, so that the concatenation of the two words, i.e. words[i] + words[j] is a palindrome.","Url":"http://www.programcreek.com/2014/05/leetcode-palindrome-pairs-java/","Keywords":null,"Topic":null,"Name":"Palindrome Pairs"},{"Company":null,"Tags":["String/Array"],"Text":"Given two strings S and T, determine if they are both one edit distance apart.","Url":"http://www.programcreek.com/2014/05/leetcode-one-edit-distance-java/","Keywords":null,"Topic":null,"Name":"One Edit Distance"},{"Company":null,"Tags":["String/Array"],"Text":"Given two strings s1 and s2 of the same length, determine if s2 is a scrambled string of s1.","Url":"http://www.programcreek.com/2014/05/leetcode-scramble-string-java/","Keywords":null,"Topic":null,"Name":"Scramble String"},{"Company":null,"Tags":["String/Array"],"Text":"You are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad.","Url":"http://www.programcreek.com/2014/05/leetcode-first-bad-version-java/","Keywords":null,"Topic":null,"Name":"First Bad Version"},{"Company":null,"Tags":["Matrix"],"Text":"Given a m * n matrix, if an element is 0, set its entire row and column to 0.\r\nDo it in place.","Url":"http://www.programcreek.com/2012/12/leetcode-set-matrix-zeroes-java/","Keywords":null,"Topic":null,"Name":"Set Matrix Zeroes"},{"Company":null,"Tags":["Matrix"],"Text":"Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.","Url":"http://www.programcreek.com/2013/01/leetcode-spiral-matrix-java/","Keywords":null,"Topic":null,"Name":"Spiral Matrix"},{"Company":null,"Tags":["Matrix"],"Text":"Given an integer n, generate a square matrix filled with elements from 1 to n2 in spiral order. For example, given n = 4,","Url":"http://www.programcreek.com/2014/05/leetcode-spiral-matrix-ii-java/","Keywords":null,"Topic":null,"Name":"Spiral Matrix II"},{"Company":null,"Tags":["Matrix"],"Text":"Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has properties:","Url":"http://www.programcreek.com/2013/01/leetcode-search-a-2d-matrix-java/","Keywords":null,"Topic":null,"Name":"Search a 2D Matrix"},{"Company":null,"Tags":["Matrix"],"Text":"Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:","Url":"http://www.programcreek.com/2014/04/leetcode-search-a-2d-matrix-ii-java/","Keywords":null,"Topic":null,"Name":"Search a 2D Matrix II"},{"Company":null,"Tags":["Matrix"],"Text":"You are given an n x n 2D matrix representing an image.","Url":"http://www.programcreek.com/2013/01/leetcode-rotate-image-java/","Keywords":null,"Topic":null,"Name":"Rotate Image"},{"Company":null,"Tags":["Matrix"],"Text":"Determine if a Sudoku is valid. The Sudoku board could be partially filled, where empty cells are filled with the character '.'.","Url":"http://www.programcreek.com/2014/05/leetcode-valid-sudoku-java/","Keywords":null,"Topic":null,"Name":"Valid Sudoku"},{"Company":null,"Tags":["Matrix"],"Text":"Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.","Url":"http://www.programcreek.com/2014/05/leetcode-minimum-path-sum-java/","Keywords":null,"Topic":null,"Name":"Minimum Path Sum (DP)"},{"Company":null,"Tags":["Matrix"],"Text":"A robot is located at the top-left corner of a m x n grid. It can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid.","Url":"http://www.programcreek.com/2014/05/leetcode-unique-paths-java/","Keywords":null,"Topic":null,"Name":"Unique Paths (DP)"},{"Company":null,"Tags":["Matrix"],"Text":"Follow up for \"Unique Paths\":","Url":"http://www.programcreek.com/2014/05/leetcode-unique-paths-ii-java/","Keywords":null,"Topic":null,"Name":"Unique Paths II (DP)"},{"Company":null,"Tags":["Matrix"],"Text":"Given a 2-d grid map of '1's (land) and '0's (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.","Url":"http://www.programcreek.com/2014/04/leetcode-number-of-islands-java/","Keywords":null,"Topic":null,"Name":"Number of Islands (DFS/BFS)"},{"Company":null,"Tags":["Matrix"],"Text":"A 2d grid map of m rows and n columns is initially filled with water. We may perform an addLand operation which turns the water at position (row, col) into a land. Given a list of positions to operate, count the number of islands after each addLand operation. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.","Url":"http://www.programcreek.com/2015/01/leetcode-number-of-islands-ii-java/","Keywords":null,"Topic":null,"Name":"Number of Islands II"},{"Company":null,"Tags":["Matrix"],"Text":"Given a 2D board containing 'X' and 'O', capture all regions surrounded by 'X'. A region is captured by flipping all 'O's into 'X's in that surrounded region.","Url":"http://www.programcreek.com/2014/04/leetcode-surrounded-regions-java/","Keywords":null,"Topic":null,"Name":"Surrounded Regions (BFS)"},{"Company":null,"Tags":["Matrix"],"Text":"Given a 2D binary matrix filled with 0's and 1's, find the largest rectangle containing all ones and return its area.","Url":"http://www.programcreek.com/2014/05/leetcode-maximal-rectangle-java/","Keywords":null,"Topic":null,"Name":"Maximal Rectangle"},{"Company":null,"Tags":["Matrix"],"Text":"Given a 2D binary matrix filled with 0's and 1's, find the largest square containing all 1's and return its area.","Url":"http://www.programcreek.com/2014/06/leetcode-maximal-square-java/","Keywords":null,"Topic":null,"Name":"Maximal Square"},{"Company":null,"Tags":["Matrix"],"Text":"Given a 2D board and a word, find if the word exists in the grid.","Url":"http://www.programcreek.com/2014/06/leetcode-word-search-java/","Keywords":null,"Topic":null,"Name":"Word Search (DFS)"},{"Company":null,"Tags":["Matrix"],"Text":"Given a 2D board and a list of words from the dictionary, find all words in the board.","Url":"http://www.programcreek.com/2014/06/leetcode-word-search-ii-java/","Keywords":null,"Topic":null,"Name":"Word Search II"},{"Company":null,"Tags":["Matrix"],"Text":"Given a positive integer n, break it into the sum of at least two positive integers and maximize the product of those integers. Return the maximum product you can get.","Url":"http://www.programcreek.com/2015/04/leetcode-integer-break-java/","Keywords":null,"Topic":null,"Name":"Integer Break"},{"Company":null,"Tags":["Matrix"],"Text":"Given a 2D matrix matrix, find the sum of the elements inside the rectangle defined by its upper left corner (row1, col1) and lower right corner (row2, col2).","Url":"http://www.programcreek.com/2014/04/leetcode-range-sum-query-2d-immutable-java/","Keywords":null,"Topic":null,"Name":"Range Sum Query 2D â€“ Immutable"},{"Company":null,"Tags":["Matrix"],"Text":"Given an integer matrix, find the length of the longest increasing path.","Url":"http://www.programcreek.com/2014/05/leetcode-longest-increasing-path-in-a-matrix-java/","Keywords":null,"Topic":null,"Name":"Longest Increasing Path in a Matrix (DFS)"},{"Company":null,"Tags":["Matrix"],"Text":"You want to build a house on an empty land which reaches all buildings in the shortest amount of distance. You can only move up, down, left and right. You are given a 2D grid of values 0, 1 or 2, where:","Url":"http://www.programcreek.com/2014/05/leetcode-shortest-distance-from-all-buildings-java/","Keywords":null,"Topic":null,"Name":"Shortest Distance from All Buildings"},{"Company":null,"Tags":["Matrix"],"Text":"Given a board with m by n cells, each cell has an initial state live (1) or dead (0). Each cell interacts with its eight neighbors (horizontal, vertical, diagonal) using the following four rules:","Url":"http://www.programcreek.com/2014/05/leetcode-game-of-life-java/","Keywords":null,"Topic":null,"Name":"Game of Life"},{"Company":null,"Tags":["Linked List"],"Text":"This post shows how to implement a stack by using an array.","Url":"http://www.programcreek.com/2015/03/implement-a-stack-using-an-array/","Keywords":null,"Topic":null,"Name":"Implement a Stack Using an Array"},{"Company":null,"Tags":["Linked List"],"Text":"You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.","Url":"http://www.programcreek.com/2012/12/add-two-numbers/","Keywords":null,"Topic":null,"Name":"Add Two Numbers"},{"Company":null,"Tags":["Linked List"],"Text":"Given a singly linked list L: L0â†’L1â†’ ... â†’Ln-1â†’Ln,\r\nreorder it to: L0â†’Lnâ†’L1â†’Ln-1â†’L2â†’Ln-2â†’...","Url":"http://www.programcreek.com/2013/12/in-place-reorder-a-singly-linked-list-in-java/","Keywords":null,"Topic":null,"Name":"Reorder List"},{"Company":null,"Tags":["Linked List"],"Text":"Given a linked list, determine if it has a cycle in it.","Url":"http://www.programcreek.com/2012/12/leetcode-linked-list-cycle/","Keywords":null,"Topic":null,"Name":"Linked List Cycle"},{"Company":null,"Tags":["Linked List"],"Text":"A linked list is given such that each node contains an additional random pointer which could point to any node in the list or null.","Url":"http://www.programcreek.com/2012/12/leetcode-copy-list-with-random-pointer/","Keywords":null,"Topic":null,"Name":"Copy List with Random Pointer"},{"Company":null,"Tags":["Linked List"],"Text":"Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.","Url":"http://www.programcreek.com/2012/12/leetcode-merge-two-sorted-lists-java/","Keywords":null,"Topic":null,"Name":"Merge Two Sorted Lists"},{"Company":null,"Tags":["Linked List"],"Text":"Problem","Url":"http://www.programcreek.com/2015/03/leetcode-odd-even-linked-list-java/","Keywords":null,"Topic":null,"Name":"Odd Even Linked List"},{"Company":null,"Tags":["Linked List"],"Text":"Given a sorted linked list, delete all duplicates such that each element appear only once.","Url":"http://www.programcreek.com/2013/01/leetcode-remove-duplicates-from-sorted-list/","Keywords":null,"Topic":null,"Name":"Remove Duplicates from Sorted List"},{"Company":null,"Tags":["Linked List"],"Text":"Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.","Url":"http://www.programcreek.com/2014/06/leetcode-remove-duplicates-from-sorted-list-ii-java/","Keywords":null,"Topic":null,"Name":"Remove Duplicates from Sorted List II"},{"Company":null,"Tags":["Linked List"],"Text":"Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.","Url":"http://www.programcreek.com/2013/02/leetcode-partition-list-java/","Keywords":null,"Topic":null,"Name":"Partition List"},{"Company":null,"Tags":["Linked List"],"Text":"Design and implement a data structure for Least Recently Used (LRU) cache. It should support the following operations: get and set.","Url":"http://www.programcreek.com/2013/03/leetcode-lru-cache-java/","Keywords":null,"Topic":null,"Name":"LRU Cache"},{"Company":null,"Tags":["Linked List"],"Text":"Problem","Url":"http://www.programcreek.com/2014/02/leetcode-intersection-of-two-linked-lists-java/","Keywords":null,"Topic":null,"Name":"Intersection of Two Linked Lists"},{"Company":null,"Tags":["Linked List"],"Text":"Remove all elements from a linked list of integers that have value val.","Url":"http://www.programcreek.com/2014/04/leetcode-remove-linked-list-elements-java/","Keywords":null,"Topic":null,"Name":"Remove Linked List Elements"},{"Company":null,"Tags":["Linked List"],"Text":"Given a linked list, swap every two adjacent nodes and return its head.","Url":"http://www.programcreek.com/2014/04/leetcode-swap-nodes-in-pairs-java/","Keywords":null,"Topic":null,"Name":"Swap Nodes in Pairs"},{"Company":null,"Tags":["Linked List"],"Text":"Reverse a singly linked list.","Url":"http://www.programcreek.com/2014/05/leetcode-reverse-linked-list-java/","Keywords":null,"Topic":null,"Name":"Reverse Linked List"},{"Company":null,"Tags":["Linked List"],"Text":"Reverse a linked list from position m to n. Do it in-place and in one-pass.","Url":"http://www.programcreek.com/2014/06/leetcode-reverse-linked-list-ii-java/","Keywords":null,"Topic":null,"Name":"Reverse Linked List II"},{"Company":null,"Tags":["Linked List"],"Text":"Given a linked list, remove the nth node from the end of list and return its head.","Url":"http://www.programcreek.com/2014/05/leetcode-remove-nth-node-from-end-of-list-java/","Keywords":null,"Topic":null,"Name":"Remove Nth Node From End of List (Fast-Slow Pointers)"},{"Company":null,"Tags":["Linked List"],"Text":"Implement the following operations of a stack using queues.\r\npush(x) -- Push element x onto stack.\r\npop() -- Removes the element on top of the stack.\r\ntop() -- Get the top element.\r\nempty() -- Return whether the stack is empty.","Url":"http://www.programcreek.com/2014/06/leetcode-implement-stack-using-queues-java/","Keywords":null,"Topic":null,"Name":"Implement Stack using Queues"},{"Company":null,"Tags":["Linked List"],"Text":"Implement the following operations of a queue using stacks.","Url":"http://www.programcreek.com/2014/07/leetcode-implement-queue-using-stacks-java/","Keywords":null,"Topic":null,"Name":"Implement Queue using Stacks"},{"Company":null,"Tags":["Linked List"],"Text":"Given a singly linked list, determine if it is a palindrome.","Url":"http://www.programcreek.com/2014/07/leetcode-palindrome-linked-list-java/","Keywords":null,"Topic":null,"Name":"Palindrome Linked List"},{"Company":null,"Tags":["Linked List"],"Text":"There following Java code shows how to implement a queue without using any extra data structures in Java. We can implement a queue by using an array.","Url":"http://www.programcreek.com/2014/07/implement-a-queue-using-an-array-in-java/","Keywords":null,"Topic":null,"Name":"Implement a Queue using an Array"},{"Company":null,"Tags":["Linked List"],"Text":"Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.","Url":"http://www.programcreek.com/2014/07/leetcode-delete-node-in-a-linked-list-java/","Keywords":null,"Topic":null,"Name":"Delete Node in a Linked List"},{"Company":null,"Tags":["Linked List"],"Text":"Given a stream of integers and a window size, calculate the moving average of all integers in the sliding window.","Url":"http://www.programcreek.com/2014/05/leetcode-moving-average-from-data-stream-java/","Keywords":null,"Topic":null,"Name":"Moving Average from Data Stream"},{"Company":null,"Tags":["Tree"],"Text":"Analysis","Url":"http://www.programcreek.com/2012/12/leetcode-solution-for-binary-tree-preorder-traversal-in-java/","Keywords":null,"Topic":null,"Name":"Preorder"},{"Company":null,"Tags":["Tree"],"Text":"There are 3 solutions for solving this problem.","Url":"http://www.programcreek.com/2012/12/leetcode-solution-of-binary-tree-inorder-traversal-in-java/","Keywords":null,"Topic":null,"Name":"Inorder"},{"Company":null,"Tags":["Tree"],"Text":"Among preoder, inorder and postorder binary tree traversal problems, postorder traversal is the most complicated one.","Url":"http://www.programcreek.com/2012/12/leetcode-solution-of-iterative-binary-tree-postorder-traversal-in-java/","Keywords":null,"Topic":null,"Name":"Postorder"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).","Url":"http://www.programcreek.com/2014/04/leetcode-binary-tree-level-order-traversal-java/","Keywords":null,"Topic":null,"Name":"Level Order"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary tree, return the bottom-up level order traversal of its nodes' values.","Url":"http://www.programcreek.com/2014/04/leetcode-binary-tree-level-order-traversal-ii-java/","Keywords":null,"Topic":null,"Name":"Level Order II"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary tree, return the vertical order traversal of its nodes' values. (ie, from top to bottom, column by column).","Url":"http://www.programcreek.com/2014/04/leetcode-binary-tree-vertical-order-traversal-java/","Keywords":null,"Topic":null,"Name":"Vertical Order"},{"Company":null,"Tags":["Tree"],"Text":"Java Solution 1 - Recursive","Url":"http://www.programcreek.com/2014/06/leetcode-invert-binary-tree-java/","Keywords":null,"Topic":null,"Name":"Invert Binary Tree"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary search tree, write a function kthSmallest to find the kth smallest element in it. (1 â‰¤ k â‰¤ BST's total elements)","Url":"http://www.programcreek.com/2014/07/leetcode-kth-smallest-element-in-a-bst-java/","Keywords":null,"Topic":null,"Name":"Kth Smallest Element in a BST"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary tree, find the length of the longest consecutive sequence path.","Url":"http://www.programcreek.com/2014/04/leetcode-binary-tree-longest-consecutive-sequence-java/","Keywords":null,"Topic":null,"Name":"Binary Tree Longest Consecutive Sequence"},{"Company":null,"Tags":["Tree"],"Text":"Assume a BST is defined as follows:","Url":"http://www.programcreek.com/2012/12/leetcode-validate-binary-search-tree-java/","Keywords":null,"Topic":null,"Name":"Validate Binary Search Tree"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary tree, flatten it to a linked list in-place.","Url":"http://www.programcreek.com/2013/01/leetcode-flatten-binary-tree-to-linked-list/","Keywords":null,"Topic":null,"Name":"Flatten Binary Tree to Linked List"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.","Url":"http://www.programcreek.com/2013/01/leetcode-path-sum/","Keywords":null,"Topic":null,"Name":"Path Sum (DFS or BFS)"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.","Url":"http://www.programcreek.com/2014/05/leetcode-path-sum-ii-java/","Keywords":null,"Topic":null,"Name":"Path Sum II (DFS)"},{"Company":null,"Tags":["Tree"],"Text":"Given inorder and postorder traversal of a tree, construct the binary tree.","Url":"http://www.programcreek.com/2013/01/construct-binary-tree-from-inorder-and-postorder-traversal/","Keywords":null,"Topic":null,"Name":"Construct Binary Tree from Inorder and Postorder Traversal"},{"Company":null,"Tags":["Tree"],"Text":"Given preorder and inorder traversal of a tree, construct the binary tree.","Url":"http://www.programcreek.com/2014/06/leetcode-construct-binary-tree-from-preorder-and-inorder-traversal-java/","Keywords":null,"Topic":null,"Name":"Construct Binary Tree from Preorder and Inorder Traversal"},{"Company":null,"Tags":["Tree"],"Text":"Given an array where elements are sorted in ascending order, convert it to a height balanced BST.","Url":"http://www.programcreek.com/2013/01/leetcode-convert-sorted-array-to-binary-search-tree-java/","Keywords":null,"Topic":null,"Name":"Convert Sorted Array to Binary Search Tree"},{"Company":null,"Tags":["Tree"],"Text":"Given a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST.","Url":"http://www.programcreek.com/2013/01/leetcode-convert-sorted-list-to-binary-search-tree-java/","Keywords":null,"Topic":null,"Name":"Convert Sorted List to Binary Search Tree"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary tree, find its minimum depth.","Url":"http://www.programcreek.com/2013/02/leetcode-minimum-depth-of-binary-tree-java/","Keywords":null,"Topic":null,"Name":"Minimum Depth of Binary Tree"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary tree, find the maximum path sum. The path may start and end at any node in the tree. For example, given the below binary tree","Url":"http://www.programcreek.com/2013/02/leetcode-binary-tree-maximum-path-sum-java/","Keywords":null,"Topic":null,"Name":"Binary Tree Maximum Path Sum *"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary tree, determine if it is height-balanced.","Url":"http://www.programcreek.com/2013/02/leetcode-balanced-binary-tree-java/","Keywords":null,"Topic":null,"Name":"Balanced Binary Tree"},{"Company":null,"Tags":["Tree"],"Text":"Problem","Url":"http://www.programcreek.com/2014/03/leetcode-symmetric-tree-java/","Keywords":null,"Topic":null,"Name":"Symmetric Tree"},{"Company":null,"Tags":["Tree"],"Text":"Problem","Url":"http://www.programcreek.com/2014/04/leetcode-binary-search-tree-iterator-java/","Keywords":null,"Topic":null,"Name":"Binary Search Tree Iterator"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom. For example, given the following binary tree,","Url":"http://www.programcreek.com/2014/04/leetcode-binary-tree-right-side-view-java/","Keywords":null,"Topic":null,"Name":"Binary Tree Right Side View"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary search tree (BST), find the lowest common ancestor (LCA) of two given nodes in the BST.","Url":"http://www.programcreek.com/2014/07/leetcode-lowest-common-ancestor-of-a-binary-search-tree-java/","Keywords":null,"Topic":null,"Name":"Lowest Common Ancestor of a Binary Search Tree"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.","Url":"http://www.programcreek.com/2014/07/leetcode-lowest-common-ancestor-of-a-binary-tree-java/","Keywords":null,"Topic":null,"Name":"Lowest Common Ancestor of a Binary Tree"},{"Company":null,"Tags":["Tree"],"Text":"One way to serialize a binary tree is to use pre-order traversal. When we encounter a non-null node, we record the node's value. If it is a null node, we record using a sentinel value such as #.","Url":"http://www.programcreek.com/2015/01/leetcode-verify-preorder-serialization-of-a-binary-tree-java/","Keywords":null,"Topic":null,"Name":"Verify Preorder Serialization of a Binary Tree"},{"Company":null,"Tags":["Tree"],"Text":"Given the following perfect binary tree,","Url":"http://www.programcreek.com/2014/05/leetcode-populating-next-right-pointers-in-each-node-java/","Keywords":null,"Topic":null,"Name":"Populating Next Right Pointers in Each Node"},{"Company":null,"Tags":["Tree"],"Text":"Follow up for problem \"Populating Next Right Pointers in Each Node\".","Url":"http://www.programcreek.com/2014/06/leetcode-populating-next-right-pointers-in-each-node-ii-java/","Keywords":null,"Topic":null,"Name":"Populating Next Right Pointers in Each Node II"},{"Company":null,"Tags":["Tree"],"Text":"Given n, how many structurally unique BST's (binary search trees) that store values 1...n?","Url":"http://www.programcreek.com/2014/05/leetcode-unique-binary-search-trees-java/","Keywords":null,"Topic":null,"Name":"Unique Binary Search Trees (DP)"},{"Company":null,"Tags":["Tree"],"Text":"Given n, generate all structurally unique BST's (binary search trees) that store values 1...n.","Url":"http://www.programcreek.com/2014/05/leetcode-unique-binary-search-trees-ii-java/","Keywords":null,"Topic":null,"Name":"Unique Binary Search Trees II (DFS)"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number. Find the total sum of all root-to-leaf numbers.","Url":"http://www.programcreek.com/2014/05/leetcode-sum-root-to-leaf-numbers-java/","Keywords":null,"Topic":null,"Name":"Sum Root to Leaf Numbers (DFS)"},{"Company":null,"Tags":["Tree"],"Text":"Given a complete binary tree, count the number of nodes.","Url":"http://www.programcreek.com/2014/06/leetcode-count-complete-tree-nodes-java/","Keywords":null,"Topic":null,"Name":"Count Complete Tree Nodes"},{"Company":null,"Tags":["Tree"],"Text":"Given a non-empty binary search tree and a target value, find the value in the BST that is closest to the target.","Url":"http://www.programcreek.com/2014/05/leetcode-closest-binary-search-tree-value-java/","Keywords":null,"Topic":null,"Name":"Closest Binary Search Tree Value"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary tree, return all root-to-leaf paths.","Url":"http://www.programcreek.com/2014/05/leetcode-binary-tree-paths-java/","Keywords":null,"Topic":null,"Name":"Binary Tree Paths"},{"Company":null,"Tags":["Tree"],"Text":"Given a binary tree, find its maximum depth.","Url":"http://www.programcreek.com/2014/05/leetcode-maximum-depth-of-binary-tree-java/","Keywords":null,"Topic":null,"Name":"Maximum Depth of Binary Tree"},{"Company":null,"Tags":["Tree"],"Text":"Two elements of a binary search tree (BST) are swapped by mistake. Recover the tree without changing its structure.","Url":"http://www.programcreek.com/2014/05/leetcode-recover-binary-search-tree-java/","Keywords":null,"Topic":null,"Name":"Recover Binary Search Tree"},{"Company":null,"Tags":["Heap"],"Text":"This is a classic interview question. Another similar problem is \"merge k sorted lists\".","Url":"http://www.programcreek.com/2014/05/merge-k-sorted-arrays-in-java/","Keywords":null,"Topic":null,"Name":"Merge k sorted arrays"},{"Company":null,"Tags":["Heap"],"Text":"Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.","Url":"http://www.programcreek.com/2013/02/leetcode-merge-k-sorted-lists-java/","Keywords":null,"Topic":null,"Name":"Merge k Sorted Lists *"},{"Company":null,"Tags":["Heap"],"Text":"Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.","Url":"http://www.programcreek.com/2015/01/leetcode-find-median-from-data-stream-java/","Keywords":null,"Topic":null,"Name":"Find Median from Data Stream"},{"Company":null,"Tags":["Trie"],"Text":"Implement a trie with insert, search, and startsWith methods.","Url":"http://www.programcreek.com/2014/05/leetcode-implement-trie-prefix-tree-java/","Keywords":null,"Topic":null,"Name":"Implement Trie (Prefix Tree)"},{"Company":null,"Tags":["Trie"],"Text":"Design a data structure that supports the following two operations:","Url":"http://www.programcreek.com/2014/05/leetcode-add-and-search-word-data-structure-design-java/","Keywords":null,"Topic":null,"Name":"Add and Search Word - Data structure design (DFS)"},{"Company":null,"Tags":["Segment Tree"],"Text":"Given an integer array nums, find the sum of the elements between indices i and j (i â‰¤ j), inclusive. The update(i, val) function modifies nums by updating the element at index i to val.","Url":"http://www.programcreek.com/2014/04/leetcode-range-sum-query-mutable-java/","Keywords":null,"Topic":null,"Name":"Range Sum Query - Mutable"},{"Company":null,"Tags":["Segment Tree"],"Text":"Analysis","Url":"http://www.programcreek.com/2014/06/leetcode-the-skyline-problem-java/","Keywords":null,"Topic":null,"Name":"The Skyline Problem"},{"Company":null,"Tags":["Graph"],"Text":"LeetCode Problem:","Url":"http://www.programcreek.com/2012/12/leetcode-clone-graph-java/","Keywords":null,"Topic":null,"Name":"Clone Graph"},{"Company":null,"Tags":["Graph"],"Text":"There are a total of n courses you have to take, labeled from 0 to n - 1. Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: [0,1]. Given the total number of courses and a list of prerequisite pairs, is it possible for you to finish all courses?","Url":"http://www.programcreek.com/2014/05/leetcode-course-schedule-java/","Keywords":null,"Topic":null,"Name":"Course Schedule (BFS/DFS)"},{"Company":null,"Tags":["Graph"],"Text":"This is an extension of Course Schedule. This time a valid sequence of courses is required as output.","Url":"http://www.programcreek.com/2014/06/leetcode-course-schedule-ii-java/","Keywords":null,"Topic":null,"Name":"Course Schedule II (BFS)"},{"Company":null,"Tags":["Graph"],"Text":"Given a list of airline tickets represented by pairs of departure and arrival airports [from, to], reconstruct the itinerary in order. All of the tickets belong to a man who departs from JFK. Thus, the itinerary must begin with JFK.","Url":"http://www.programcreek.com/2015/03/leetcode-reconstruct-itinerary-java/","Keywords":null,"Topic":null,"Name":"Reconstruct Itinerary"},{"Company":null,"Tags":["Graph"],"Text":"Given n nodes labeled from 0 to n - 1 and a list of undirected edges (each edge is a pair of nodes), check if these edges form a valid tree.","Url":"http://www.programcreek.com/2014/05/graph-valid-tree-java/","Keywords":null,"Topic":null,"Name":"Graph Valid Tree"},{"Company":null,"Tags":["Sorting"],"Text":"While analyzing source code of a large number of open source Java projects, I found Java developers frequently sort in two ways. One is using the sort() method of Collections or Arrays, and the other is using sorted data structures, such as TreeMap and TreeSet.","Url":"http://www.programcreek.com/2014/03/how-developers-sort-in-java/","Keywords":null,"Topic":null,"Name":"Java developers sort in practice"},{"Company":null,"Tags":["Sorting"],"Text":"LeetCode - Sort List:","Url":"http://www.programcreek.com/2012/11/leetcode-solution-merge-sort-linkedlist-in-java/","Keywords":null,"Topic":null,"Name":"Mergesort"},{"Company":null,"Tags":["Sorting"],"Text":"Quicksort is a divide and conquer algorithm. It first divides a large list into two smaller sub-lists and then recursively sort the two sub-lists. If we want to sort an array without any extra space, quicksort is a good option. On average, time complexity is O(n log(n)).","Url":"http://www.programcreek.com/2012/11/quicksort-array-in-java/","Keywords":null,"Topic":null,"Name":"Quicksort"},{"Company":null,"Tags":["Sorting"],"Text":"Insertion Sort List:","Url":"http://www.programcreek.com/2012/11/leetcode-solution-sort-a-linked-list-using-insertion-sort-in-java/","Keywords":null,"Topic":null,"Name":"InsertionSort"},{"Company":null,"Tags":["Sorting"],"Text":"Given an unsorted array, find the maximum difference between the successive elements in its sorted form.","Url":"http://www.programcreek.com/2014/03/leetcode-maximum-gap-java/","Keywords":null,"Topic":null,"Name":"Maximum Gap (Bucket Sort)"},{"Company":null,"Tags":["Sorting"],"Text":"Given an unsorted integer array, find the first missing positive integer. For example, given [1,2,0] return 3 and [3,4,-1,1] return 2.","Url":"http://www.programcreek.com/2014/05/leetcode-first-missing-positive-java/","Keywords":null,"Topic":null,"Name":"First Missing Positive (Bucket Sort)"},{"Company":null,"Tags":["Sorting"],"Text":"Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue.","Url":"http://www.programcreek.com/2014/06/leetcode-sort-colors-java/","Keywords":null,"Topic":null,"Name":"Sort Colors (Counting Sort)"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"","Url":"http://www.programcreek.com/2013/12/edit-distance-in-java/","Keywords":null,"Topic":null,"Name":"Edit Distance"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Given a string S and a string T, count the number of distinct subsequences of T in S.","Url":"http://www.programcreek.com/2013/01/leetcode-distinct-subsequences-total-java/","Keywords":null,"Topic":null,"Name":"Distinct Subsequences Total"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Finding the longest palindromic substring is a classic problem of coding interview. This post summarizes 3 different solutions for this problem.","Url":"http://www.programcreek.com/2013/12/leetcode-solution-of-longest-palindromic-substring-java/","Keywords":null,"Topic":null,"Name":"Longest Palindromic Substring"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"1. Naive Approach","Url":"http://www.programcreek.com/2012/12/leetcode-solution-word-break/","Keywords":null,"Topic":null,"Name":"Word Break"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Given a string s and a dictionary of words dict, add spaces in s to construct a sentence where each word is a valid dictionary word. Return all such possible sentences. For example, given s = \"catsanddog\", dict = [\"cat\", \"cats\", \"and\", \"sand\", \"dog\"], the solution is [\"cats and dog\", \"cat sand dog\"].","Url":"http://www.programcreek.com/2014/03/leetcode-word-break-ii-java/","Keywords":null,"Topic":null,"Name":"Word Break II"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Find the contiguous subarray within an array (containing at least one number) which has the largest sum.","Url":"http://www.programcreek.com/2013/02/leetcode-maximum-subarray-java/","Keywords":null,"Topic":null,"Name":"Maximum Subarray"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Find the contiguous subarray within an array (containing at least one number) which has the largest product.","Url":"http://www.programcreek.com/2014/03/leetcode-maximum-product-subarray-java/","Keywords":null,"Topic":null,"Name":"Maximum Product Subarray"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Problem","Url":"http://www.programcreek.com/2013/03/leetcode-palindrome-partitioning-java/","Keywords":null,"Topic":null,"Name":"Palindrome Partitioning"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Given a string s, partition s such that every substring of the partition is a palindrome. Return the minimum cuts needed for a palindrome partitioning of s. For example, given s = \"aab\", return 1 since the palindrome partitioning [\"aa\",\"b\"] could be produced using 1 cut.","Url":"http://www.programcreek.com/2014/04/leetcode-palindrome-partitioning-ii-java/","Keywords":null,"Topic":null,"Name":"Palindrome Partitioning II"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and it will automatically contact the police if two adjacent houses were broken into on the same night.","Url":"http://www.programcreek.com/2014/03/leetcode-house-robber-java/","Keywords":null,"Topic":null,"Name":"House Robber"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"After robbing those houses on that street, the thief has found himself a new place for his thievery so that he will not get too much attention. This time, all houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, the security system for these houses remain the same as for those in the previous street.","Url":"http://www.programcreek.com/2014/05/leetcode-house-robber-ii-java/","Keywords":null,"Topic":null,"Name":"House Robber II"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"The houses form a binary tree. If the root is robbed, its left and right can not be robbed.","Url":"http://www.programcreek.com/2015/03/leetcode-house-robber-iii-java/","Keywords":null,"Topic":null,"Name":"House Robber III"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Given an array of non-negative integers, you are initially positioned at the first index of the array. Each element in the array represents your maximum jump length at that position. Determine if you are able to reach the last index. For example: A = [2,3,1,1,4], return true. A = [3,2,1,0,4], return false.","Url":"http://www.programcreek.com/2014/03/leetcode-jump-game-java/","Keywords":null,"Topic":null,"Name":"Jump Game"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Given an array of non-negative integers, you are initially positioned at the first index of the array. Each element in the array represents your maximum jump length at that position.","Url":"http://www.programcreek.com/2014/06/leetcode-jump-game-ii-java/","Keywords":null,"Topic":null,"Name":"Jump Game II"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Say you have an array for which the ith element is the price of a given stock on day i.","Url":"http://www.programcreek.com/2014/02/leetcode-best-time-to-buy-and-sell-stock-java/","Keywords":null,"Topic":null,"Name":"Best Time to Buy and Sell Stock"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Say you have an array for which the ith element is the price of a given stock on day i.","Url":"http://www.programcreek.com/2014/02/leetcode-best-time-to-buy-and-sell-stock-ii-java/","Keywords":null,"Topic":null,"Name":"Best Time to Buy and Sell Stock II"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Say you have an array for which the ith element is the price of a given stock on day i.","Url":"http://www.programcreek.com/2014/02/leetcode-best-time-to-buy-and-sell-stock-iii-java/","Keywords":null,"Topic":null,"Name":"Best Time to Buy and Sell Stock III"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Problem","Url":"http://www.programcreek.com/2014/03/leetcode-best-time-to-buy-and-sell-stock-iv-java/","Keywords":null,"Topic":null,"Name":"Best Time to Buy and Sell Stock IV"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Example:","Url":"http://www.programcreek.com/2014/03/leetcode-dungeon-game-java/","Keywords":null,"Topic":null,"Name":"Dungeon Game"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.","Url":"http://www.programcreek.com/2014/05/leetcode-minimum-path-sum-java/","Keywords":null,"Topic":null,"Name":"Minimum Path Sum"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"A robot is located at the top-left corner of a m x n grid. It can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid.","Url":"http://www.programcreek.com/2014/05/leetcode-unique-paths-java/","Keywords":null,"Topic":null,"Name":"Unique Paths"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"A message containing letters from A-Z is being encoded to numbers using the following mapping:","Url":"http://www.programcreek.com/2014/06/leetcode-decode-ways-java/","Keywords":null,"Topic":null,"Name":"Decode Ways"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences).","Url":"http://www.programcreek.com/2014/04/longest-common-subsequence-java/","Keywords":null,"Topic":null,"Name":"Longest Common Subsequence"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"In computer science, the longest common substring problem is to find the longest string that is a substring of two or more strings.","Url":"http://www.programcreek.com/2015/04/longest-common-substring-java/","Keywords":null,"Topic":null,"Name":"Longest Common Substring"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Given an unsorted array of integers, find the length of longest increasing subsequence.","Url":"http://www.programcreek.com/2014/04/leetcode-longest-increasing-subsequence-java/","Keywords":null,"Topic":null,"Name":"Longest Increasing Subsequence"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"You are given coins of different denominations and a total amount of money amount. Write a function to compute the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1.","Url":"http://www.programcreek.com/2015/04/leetcode-coin-change-java/","Keywords":null,"Topic":null,"Name":"Coin Change"},{"Company":null,"Tags":["Dynamic Programming"],"Text":"Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.","Url":"http://www.programcreek.com/2014/05/leetcode-perfect-squares-java/","Keywords":null,"Topic":null,"Name":"Perfect Squares"},{"Company":null,"Tags":["Bit Manipulation"],"Text":"The problem:","Url":"http://www.programcreek.com/2012/12/leetcode-solution-of-single-number-in-java/","Keywords":null,"Topic":null,"Name":"Single Number"},{"Company":null,"Tags":["Bit Manipulation"],"Text":"Problem","Url":"http://www.programcreek.com/2014/03/leetcode-single-number-ii-java/","Keywords":null,"Topic":null,"Name":"Single Number II"},{"Company":null,"Tags":["Bit Manipulation"],"Text":"Problem: Get maximum binary Gap.","Url":"http://www.programcreek.com/2013/02/twitter-codility-problem-max-binary-gap/","Keywords":null,"Topic":null,"Name":"Maximum Binary Gap"},{"Company":null,"Tags":["Bit Manipulation"],"Text":"Problem","Url":"http://www.programcreek.com/2014/03/leetcode-number-of-1-bits-java/","Keywords":null,"Topic":null,"Name":"Number of 1 Bits"},{"Company":null,"Tags":["Bit Manipulation"],"Text":"Problem","Url":"http://www.programcreek.com/2014/03/leetcode-reverse-bits-java/","Keywords":null,"Topic":null,"Name":"Reverse Bits"},{"Company":null,"Tags":["Bit Manipulation"],"Text":"Problem","Url":"http://www.programcreek.com/2014/03/leetcode-repeated-dna-sequences-java/","Keywords":null,"Topic":null,"Name":"Repeated DNA Sequences"},{"Company":null,"Tags":["Bit Manipulation"],"Text":"Given a range [m, n] where 0 <= m <= n <= 2147483647, return the bitwise AND of all numbers in this range, inclusive. For example, given the range [5, 7], you should return 4. Java Solution","Url":"http://www.programcreek.com/2014/04/leetcode-bitwise-and-of-numbers-range-java/","Keywords":null,"Topic":null,"Name":"Bitwise AND of Numbers Range"},{"Company":null,"Tags":["Bit Manipulation"],"Text":"Given an integer, write a function to determine if it is a power of two.","Url":"http://www.programcreek.com/2014/07/leetcode-power-of-two-java/","Keywords":null,"Topic":null,"Name":"Power of Two"},{"Company":null,"Tags":["Bit Manipulation"],"Text":"Given a non negative integer number num. For every numbers i in the range 0 â‰¤ i â‰¤ num calculate the number of 1's in their binary representation and return them as an array.","Url":"http://www.programcreek.com/2015/03/leetcode-counting-bits-java/","Keywords":null,"Topic":null,"Name":"Counting Bits"},{"Company":null,"Tags":["Bit Manipulation"],"Text":"Given a string array words, find the maximum value of length(word[i]) * length(word[j]) where the two words do not share common letters. You may assume that each word will contain only lower case letters. If no such two words exist, return 0.","Url":"http://www.programcreek.com/2014/04/leetcode-maximum-product-of-word-lengths-java/","Keywords":null,"Topic":null,"Name":"Maximum Product of Word Lengths"},{"Company":null,"Tags":["Combinations and Permutations"],"Text":"Given a collection of numbers, return all possible permutations.","Url":"http://www.programcreek.com/2013/02/leetcode-permutations-java/","Keywords":null,"Topic":null,"Name":"Permutations"},{"Company":null,"Tags":["Combinations and Permutations"],"Text":"Given a collection of numbers that might contain duplicates, return all possible unique permutations.","Url":"http://www.programcreek.com/2013/02/leetcode-permutations-ii-java/","Keywords":null,"Topic":null,"Name":"Permutations II"},{"Company":null,"Tags":["Combinations and Permutations"],"Text":"The set [1,2,3,â€¦,n] contains a total of n! unique permutations.","Url":"http://www.programcreek.com/2013/02/leetcode-permutation-sequence-java/","Keywords":null,"Topic":null,"Name":"Permutation Sequence"},{"Company":null,"Tags":["Combinations and Permutations"],"Text":"Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.","Url":"http://www.programcreek.com/2014/01/leetcode-generate-parentheses-java/","Keywords":null,"Topic":null,"Name":"Generate Parentheses"},{"Company":null,"Tags":["Combinations and Permutations"],"Text":"Given a set of candidate numbers (C) and a target number (T), find all unique combinations in C where the candidate numbers sums to T. The same repeated number may be chosen from C unlimited number of times.","Url":"http://www.programcreek.com/2014/02/leetcode-combination-sum-java/","Keywords":null,"Topic":null,"Name":"Combination Sum (DFS)"},{"Company":null,"Tags":["Combinations and Permutations"],"Text":"Given a collection of candidate numbers (C) and a target number (T), find all unique combinations in C where the candidate numbers sums to T. Each number in C may only be used ONCE in the combination.","Url":"http://www.programcreek.com/2014/04/leetcode-combination-sum-ii-java/","Keywords":null,"Topic":null,"Name":"Combination Sum II (DFS)"},{"Company":null,"Tags":["Combinations and Permutations"],"Text":"Find all possible combinations of k numbers that add up to a number n, given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers.","Url":"http://www.programcreek.com/2014/05/leetcode-combination-sum-iii-java/","Keywords":null,"Topic":null,"Name":"Combination Sum III (DFS)"},{"Company":null,"Tags":["Combinations and Permutations"],"Text":"Problem","Url":"http://www.programcreek.com/2014/03/leetcode-combinations-java/","Keywords":null,"Topic":null,"Name":"Combinations (DFS)"},{"Company":null,"Tags":["Combinations and Permutations"],"Text":"Given a digit string, return all possible letter combinations that the number could represent. (Check out your cellphone to see the mappings) Input:Digit string \"23\", Output: [\"ad\", \"ae\", \"af\", \"bd\", \"be\", \"bf\", \"cd\", \"ce\", \"cf\"].","Url":"http://www.programcreek.com/2014/04/leetcode-letter-combinations-of-a-phone-number-java/","Keywords":null,"Topic":null,"Name":"Letter Combinations of a Phone Number (DFS)"},{"Company":null,"Tags":["Combinations and Permutations"],"Text":"Given a string containing only digits, restore it by returning all possible valid IP address combinations.","Url":"http://www.programcreek.com/2014/06/leetcode-restore-ip-addresses-java/","Keywords":null,"Topic":null,"Name":"Restore IP Addresses"},{"Company":null,"Tags":["Math"],"Text":"LeetCode - Reverse Integer:","Url":"http://www.programcreek.com/2012/12/leetcode-reverse-integer/","Keywords":null,"Topic":null,"Name":"Reverse Integer"},{"Company":null,"Tags":["Math"],"Text":"Determine whether an integer is a palindrome. Do this without extra space.","Url":"http://www.programcreek.com/2013/02/leetcode-palindrome-number-java/","Keywords":null,"Topic":null,"Name":"Palindrome Number"},{"Company":null,"Tags":["Math"],"Text":"Problem:","Url":"http://www.programcreek.com/2012/12/leetcode-powx-n/","Keywords":null,"Topic":null,"Name":"Pow(x,n)"},{"Company":null,"Tags":["Math"],"Text":"Note: 1) Elements in a subset must be in non-descending order. 2) The solution set must not contain duplicate subsets.","Url":"http://www.programcreek.com/2013/01/leetcode-subsets-java/","Keywords":null,"Topic":null,"Name":"Subsets"},{"Company":null,"Tags":["Math"],"Text":"Given a set of distinct integers, S, return all possible subsets.","Url":"http://www.programcreek.com/2013/01/leetcode-subsets-ii-java/","Keywords":null,"Topic":null,"Name":"Subsets II"},{"Company":null,"Tags":["Math"],"Text":"Problem","Url":"http://www.programcreek.com/2014/03/leetcode-fraction-to-recurring-decimal-java/","Keywords":null,"Topic":null,"Name":"Fraction to Recurring Decimal"},{"Company":null,"Tags":["Math"],"Text":"Problem","Url":"http://www.programcreek.com/2014/03/leetcode-excel-sheet-column-number-java/","Keywords":null,"Topic":null,"Name":"Excel Sheet Column Number"},{"Company":null,"Tags":["Math"],"Text":"Problem","Url":"http://www.programcreek.com/2014/03/leetcode-excel-sheet-column-title-java/","Keywords":null,"Topic":null,"Name":"Excel Sheet Column Title"},{"Company":null,"Tags":["Math"],"Text":"Given an integer n, return the number of trailing zeroes in n!.","Url":"http://www.programcreek.com/2014/04/leetcode-factorial-trailing-zeroes-java/","Keywords":null,"Topic":null,"Name":"Factorial Trailing Zeroes"},{"Company":null,"Tags":["Math"],"Text":"Write an algorithm to determine if a number is \"happy\".","Url":"http://www.programcreek.com/2014/04/leetcode-happy-number-java/","Keywords":null,"Topic":null,"Name":"Happy Number"},{"Company":null,"Tags":["Math"],"Text":"Count the number of prime numbers less than a non-negative number, n","Url":"http://www.programcreek.com/2014/04/leetcode-count-primes-java/","Keywords":null,"Topic":null,"Name":"Count Primes"},{"Company":null,"Tags":["Math"],"Text":"Given a non-negative number represented as an array of digits, plus one to the number. The digits are stored such that the most significant digit is at the head of the list.","Url":"http://www.programcreek.com/2014/05/leetcode-plus-one-java/","Keywords":null,"Topic":null,"Name":"Plus One"},{"Company":null,"Tags":["Math"],"Text":"Divide two integers without using multiplication, division and mod operator. If it is overflow, return MAX_INT.","Url":"http://www.programcreek.com/2014/05/leetcode-divide-two-integers-java/","Keywords":null,"Topic":null,"Name":"Divide Two Integers"},{"Company":null,"Tags":["Math"],"Text":"Given two numbers represented as strings, return multiplication of the numbers as a string.","Url":"http://www.programcreek.com/2014/05/leetcode-multiply-strings-java/","Keywords":null,"Topic":null,"Name":"Multiply Strings"},{"Company":null,"Tags":["Math"],"Text":"Given n points on a 2D plane, find the maximum number of points that lie on the same straight line.","Url":"http://www.programcreek.com/2014/04/leetcode-max-points-on-a-line-java/","Keywords":null,"Topic":null,"Name":"Max Points on a Line"},{"Company":null,"Tags":["Math"],"Text":"Given an array of n integers where n > 1, nums, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].","Url":"http://www.programcreek.com/2014/07/leetcode-product-of-array-except-self-java/","Keywords":null,"Topic":null,"Name":"Product of Array Except Self"},{"Company":null,"Tags":["Math"],"Text":"Given an integer, write a function to determine if it is a power of three.","Url":"http://www.programcreek.com/2014/04/leetcode-power-of-three-java/","Keywords":null,"Topic":null,"Name":"Power of Three"},{"Company":null,"Tags":["Math"],"Text":"Given a positive integer n, break it into the sum of at least two positive integers and maximize the product of those integers. Return the maximum product you can get.","Url":"http://www.programcreek.com/2015/04/leetcode-integer-break-java/","Keywords":null,"Topic":null,"Name":"Integer Break"},{"Company":null,"Tags":["Math"],"Text":"Given an integer (signed 32 bits), write a function to check whether it is a power of 4.","Url":"http://www.programcreek.com/2015/04/leetcode-power-of-four-java/","Keywords":null,"Topic":null,"Name":"Power of Four"},{"Company":null,"Tags":["Math"],"Text":"Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.","Url":"http://www.programcreek.com/2014/04/leetcode-add-digits-java/","Keywords":null,"Topic":null,"Name":"Add Digits"},{"Company":null,"Tags":["Math"],"Text":"Write a program to check whether a given number is an ugly number. Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. For example, 6, 8 are ugly while 14 is not ugly since it includes another prime factor 7. Note that 1 is typically treated as an ugly number.","Url":"http://www.programcreek.com/2014/05/leetcode-ugly-number-java/","Keywords":null,"Topic":null,"Name":"Ugly Number"},{"Company":null,"Tags":["Math"],"Text":"Analysis","Url":"http://www.programcreek.com/2015/03/leetcode-self-crossing-java/","Keywords":null,"Topic":null,"Name":"Self Crossing"},{"Company":null,"Tags":["Math"],"Text":"Given a sorted positive integer array nums and an integer n, add/patch elements to the array such that any number in range [1, n] inclusive can be formed by the sum of some elements in the array. Return the minimum number of patches required.","Url":"http://www.programcreek.com/2015/01/leetcode-patching-array-java/","Keywords":null,"Topic":null,"Name":"Patching Array"},{"Company":null,"Tags":["Math"],"Text":"ou are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones.","Url":"http://www.programcreek.com/2014/04/leetcode-nim-game-java/","Keywords":null,"Topic":null,"Name":"Nim Game"},{"Company":null,"Tags":["Math"],"Text":"There are n bulbs that are initially off. You first turn on all the bulbs. Then, you turn off every second bulb. On the third round, you toggle every third bulb (turning on if it's off or turning off if it's on). For the ith round, you toggle every i bulb. For the nth round, you only toggle the last bulb. Find how many bulbs are on after n rounds.","Url":"http://www.programcreek.com/2014/05/leetcode-bulb-switcher-java/","Keywords":null,"Topic":null,"Name":"Bulb Switcher"},{"Company":null,"Tags":["Math"],"Text":"There is a fence with n posts, each post can be painted with one of the k colors. You have to paint all the posts such that no more than two adjacent fence posts have the same color. Return the total number of ways you can paint the fence.","Url":"http://www.programcreek.com/2014/05/leetcode-pain-fence-java/","Keywords":null,"Topic":null,"Name":"Pain Fence"}]}